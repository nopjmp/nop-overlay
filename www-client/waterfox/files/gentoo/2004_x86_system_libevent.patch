From: Mike Hommey <mh+mozilla@glandium.org>

There are two problems related with EVENT__SIZEOF_OFF_T:
- When building Firefox with -D_FILE_OFFSET_BITS=64, off_t is 64 bits,
  but the in-tree event-config.h still defines EVENT__SIZEOF_OFF_T to 4.
- When building Firefox *without* -D_FILE_OFFSET_BITS=64 (the default)
  against a system libevent that was built with -D_FILE_OFFSET_BITS=64,
  its event-config.h defines EVENT__SIZEOF_OFF_T to 8, which then
  doesn't match off_t size.

For the latter, libevent actually defines its own off_t type, that
callers are supposed to use instead of off_t. So that's what our
static_assert should be checking.

diff --git a/ipc/chromium/src/base/message_pump_libevent.cc b/ipc/chromium/src/base/message_pump_libevent.cc
--- a/ipc/chromium/src/base/message_pump_libevent.cc
+++ b/ipc/chromium/src/base/message_pump_libevent.cc
@@ -31,17 +31,17 @@
     static_assert(EVENT__SIZEOF_##TYPE == sizeof(type), \
     "bad EVENT__SIZEOF_"#TYPE);
 #else
 #error Cannot find libevent type sizes
 #endif
 
 CHECK_EVENT_SIZEOF(LONG,      long);
 CHECK_EVENT_SIZEOF(LONG_LONG, long long);
-CHECK_EVENT_SIZEOF(OFF_T,     off_t);
+CHECK_EVENT_SIZEOF(OFF_T,     ev_off_t);
 CHECK_EVENT_SIZEOF(PTHREAD_T, pthread_t);
 CHECK_EVENT_SIZEOF(SHORT,     short);
 CHECK_EVENT_SIZEOF(SIZE_T,    size_t);
 CHECK_EVENT_SIZEOF(VOID_P,    void*);
 
 // Lifecycle of struct event
 // Libevent uses two main data structures:
 // struct event_base (of which there is one per message pump), and
diff --git a/ipc/chromium/src/third_party/libevent/linux/event2/event-config.h b/ipc/chromium/src/third_party/libevent/linux/event2/event-config.h
--- a/ipc/chromium/src/third_party/libevent/linux/event2/event-config.h
+++ b/ipc/chromium/src/third_party/libevent/linux/event2/event-config.h
@@ -456,17 +456,17 @@
 #else
 #define EVENT__SIZEOF_LONG 4
 #endif
 
 /* The size of `long long', as computed by sizeof. */
 #define EVENT__SIZEOF_LONG_LONG 8
 
 /* The size of `off_t', as computed by sizeof. */
-#ifdef __LP64__
+#if defined(__LP64__) || (defined(_FILE_OFFSET_BITS) && _FILE_OFFSET_BITS == 64)
 #define EVENT__SIZEOF_OFF_T 8
 #else
 #define EVENT__SIZEOF_OFF_T 4
 #endif
 
 /* The size of `pthread_t', as computed by sizeof. */
 #ifdef __LP64__
 #define EVENT__SIZEOF_PTHREAD_T 8
